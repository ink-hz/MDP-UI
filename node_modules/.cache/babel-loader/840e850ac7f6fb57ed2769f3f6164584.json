{"remainingRequest":"/home/code/Nhanes/MDP/vue-element-admin/node_modules/thread-loader/dist/cjs.js!/home/code/Nhanes/MDP/vue-element-admin/node_modules/babel-loader/lib/index.js!/home/code/Nhanes/MDP/vue-element-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/code/Nhanes/MDP/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/code/Nhanes/MDP/vue-element-admin/src/components/ImageCropper/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/code/Nhanes/MDP/vue-element-admin/src/components/ImageCropper/index.vue","mtime":1676361296311},{"path":"/home/code/Nhanes/MDP/vue-element-admin/babel.config.js","mtime":1676361296304},{"path":"/home/code/Nhanes/MDP/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":1676361712362},{"path":"/home/code/Nhanes/MDP/vue-element-admin/node_modules/thread-loader/dist/cjs.js","mtime":1676361712362},{"path":"/home/code/Nhanes/MDP/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":1676361713304},{"path":"/home/code/Nhanes/MDP/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":1676361712362},{"path":"/home/code/Nhanes/MDP/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":1676361713481}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}